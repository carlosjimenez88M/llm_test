#=====================#
# ---- libraries ---- #
#=====================#
import json

#======================#
# ---- main class ---- #
#======================#
class InteractionTracker:
    """
    Tracks user-agent interactions for evaluation and logging.
    """
    def __init__(self, log_file="data/interaction_log.json"):
        self.log_file = log_file
        self.interactions = []
        self.conversation_id = 0

    def start_conversation(self):
        """Initialize a new conversation session."""
        self.conversation_id += 1
        self.interactions = []

    def log_interaction(self, user_query, agent_response):
        """
        Log a user query and agent response.

        Parameters
        ----------
        user_query : str
            The question asked by the user.
        agent_response : str
            The response generated by the agent.
        """
        self.interactions.append({
            "conversation_id": self.conversation_id,
            "user_query": user_query,
            "agent_response": agent_response
        })

    def save_log(self):
        """Save the logged interactions to a JSON file."""
        try:
            with open(self.log_file, "a") as log_file:
                json.dump(self.interactions, log_file)
                log_file.write("\n")
        except Exception as e:
            print(f"Error saving log: {e}")
